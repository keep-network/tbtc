name: Solidity

on:
  push:
    branches:
      - main
    paths:
      - "solidity/**"
  pull_request:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment for workflow execution'
        required: false
        default: 'dev'
      upstream_builds:
        description: 'Upstream builds'
        required: false
      upstream_ref:
        description: 'Git reference to checkout (e.g. branch name)'
        required: false
        default: 'main'

jobs:
  contracts-detect-changes:
    runs-on: ubuntu-latest
    outputs:
      path-filter: ${{ steps.filter.outputs.path-filter }}
    steps:
      - uses: actions/checkout@v2
        if: github.event_name == 'pull_request'
        
      - uses: dorny/paths-filter@v2
        if: github.event_name == 'pull_request'
        id: filter
        with:
          filters: |
            path-filter:
              - './solidity/**'

  contracts-build-and-test:
    needs: contracts-detect-changes
    if: |
      github.event_name != 'pull_request'
        || needs.contracts-detect-changes.outputs.path-filter == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./solidity
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "14.x"
          cache: "npm"
          cache-dependency-path: solidity/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Compile contracts
        run: npm run compile

      - name: Run tests
        run: npm run test:quick

  contracts-lint:
    needs: contracts-detect-changes
    if: |
      github.event_name == 'push'
        || needs.contracts-detect-changes.outputs.path-filter == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./solidity
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "14.x"
          cache: "npm"
          cache-dependency-path: solidity/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

  contracts-migrate-and-publish:
    needs: [contracts-build-and-test]
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./solidity
    steps:
      - uses: actions/checkout@v2

      - name: Load environment variables
        uses: keep-network/ci/actions/load-env-variables@v1
        with:
          environment: ${{ github.event.inputs.environment }}

      - uses: actions/setup-node@v2
        with:
          node-version: "14.x"
          cache: "npm"
          cache-dependency-path: solidity/package-lock.json
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Get upstream packages' versions
        uses: keep-network/ci/actions/upstream-builds-query@v1
        id: upstream-builds-query
        with:
          upstream-builds: ${{ github.event.inputs.upstream_builds }}
          query: |
            keep-ecdsa-contracts-version = github.com/keep-network/keep-ecdsa/solidity#version

      - name: Resolve latest contracts
        run: |
            npm install --save-exact \
              @keep-network/keep-ecdsa@${{ steps.upstream-builds-query.outputs.keep-ecdsa-contracts-version }}

      - name: Migrate contracts on Ethereum
        if: github.event.inputs.environment != 'alfajores'
        env:
          CHAIN_API_URL: ${{ secrets.KEEP_TEST_ETH_HOSTNAME_WS }}
          CONTRACT_OWNER_ACCOUNT_PRIVATE_KEY: |
            ${{ secrets.KEEP_TEST_ETH_CONTRACT_OWNER_PRIVATE_KEY }}
        run: npx truffle migrate --reset --network $TRUFFLE_NETWORK

      - name: Migrate contracts on Celo
        if: github.event.inputs.environment == 'alfajores'
        env:
          CHAIN_API_URL: ${{ secrets.KEEP_TEST_CELO_HOSTNAME }}
          CONTRACT_OWNER_ACCOUNT_PRIVATE_KEY: |
            ${{ secrets.KEEP_TEST_CELO_CONTRACT_OWNER_PRIVATE_KEY }}
        run: npx truffle migrate --reset --network $TRUFFLE_NETWORK

      - name: Copy artifacts
        run: |
          mkdir -p artifacts
          cp -r build/contracts/* artifacts/

      - name: Bump up package version
        id: npm-version-bump
        uses: keep-network/npm-version-bump@v2
        with:
          work-dir: ./solidity
          environment: ${{ github.event.inputs.environment }}
          branch: ${{ github.ref }}
          commit: ${{ github.sha }}

      - name: Push contracts to Tenderly
        if: github.event.inputs.environment == 'ropsten'
        uses: keep-network/tenderly-push-action@v1
        continue-on-error: true
        with:
          working-directory: ./solidity
          tenderly-token: ${{ secrets.TENDERLY_TOKEN }}
          tenderly-project: thesis/keep-test
          eth-network-id: ${{ env.NETWORK_ID }}
          github-project-name: tbtc
          version-tag: ${{ steps.npm-version-bump.outputs.version }}

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access=public --tag ${{ github.event.inputs.environment }}

      - name: Notify CI about completion of the workflow
        # For Alfajores we want to break the chain of deployments on tBTC contracts.
        if: github.event.inputs.environment != 'alfajores'
        uses: keep-network/ci/actions/notify-workflow-completed@v1
        env:
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
        with:
          module: "github.com/keep-network/tbtc/solidity"
          url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          environment: ${{ github.event.inputs.environment }}
          upstream_builds: ${{ github.event.inputs.upstream_builds }}
          upstream_ref: ${{ github.event.inputs.upstream_ref }}
          version: ${{ steps.npm-version-bump.outputs.version }}

      - name: Upload files needed for etherscan verification
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts for etherscan verifcation
          path: |
            ./solidity/build
            ./solidity/package.json
            ./solidity/package-lock.json

  contracts-etherscan-verification:
    needs: [contracts-migrate-and-publish]
    if: github.event.inputs.environment != 'alfajores'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./solidity
    steps:
      - uses: actions/checkout@v2

      - name: Download files needed for etherscan verification
        uses: actions/download-artifact@v2
        with:
          name: Artifacts for etherscan verifcation
          path: ./solidity

      - name: Load environment variables
        uses: keep-network/ci/actions/load-env-variables@v1
        with:
          environment: ${{ github.event.inputs.environment }}

      - uses: actions/setup-node@v2
        with:
          node-version: "14.x"
          cache: "npm"
          cache-dependency-path: solidity/package-lock.json

      - name: Install needed dependencies
        run: npm ci

      - name: Verify Ethereum contracts on Etherscan
        env:
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
          TRUFFLE_NETWORK: ${{ env.TRUFFLE_NETWORK}}
        run: ./scripts/etherscan-verify.sh
