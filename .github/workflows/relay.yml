name: Relay

on:
  push:
    branches:
      - main
    paths:
      - "relay/**"
  pull_request:
  workflow_dispatch:

jobs:
  relay-detect-changes:
    runs-on: ubuntu-latest
    outputs:
      path-filter: ${{ steps.filter.outputs.path-filter }}
    steps:
    - uses: actions/checkout@v2
      if: github.event_name == 'pull_request' 
    - uses: dorny/paths-filter@v2
      if: github.event_name == 'pull_request' 
      id: filter
      with:
        filters: |
          path-filter:
            - './relay/**'

  relay-build-test-publish:
    needs: relay-detect-changes
    if: |
      github.event_name != 'pull_request'
        || needs.relay-detect-changes.outputs.path-filter == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./relay
    steps:
      - uses: actions/checkout@v2

      - name: Load environment variables
        uses: keep-network/ci/actions/load-env-variables@v1
        with:
          # TODO: Consider passing of `environment` input instead of using 
          # hardcoded value. Would require some rework in action's code or
          # in config files.
          environment: 'ropsten'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-relay-cache
          key: ${{ runner.os }}-buildx-relay-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-relay-

      - name: Build Docker Build Image
        uses: docker/build-push-action@v2
        with:
          context: ./relay
          target: gobuild
          tags: go-build-env
          load: true # load image to local registry to use it in next steps
          cache-from: type=local,src=/tmp/.buildx-relay-cache
          cache-to: type=local,dest=/tmp/.buildx-relay-cache-new

      - name: Run Go tests
        run: |
          docker run \
            --workdir /go/src/github.com/keep-network/tbtc/relay \
            go-build-env \
            gotestsum

      - name: Login to Google Container Registry
        if: |
          github.event_name != 'pull_request'
            && github.event_name != 'schedule'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.GCR_REGISTRY_URL }}
          username: _json_key
          password: ${{ secrets.KEEP_TEST_GCR_JSON_KEY }}

      - name: Build and publish Docker Runtime Image
        uses: docker/build-push-action@v2
        env:
          IMAGE_NAME: 'relay'
        with:
          context: ./relay
          # GCR image should be named according to following convention:
          # HOSTNAME/PROJECT-ID/IMAGE:TAG
          # We don't use TAG yet.
          tags: ${{ env.GCR_REGISTRY_URL }}/${{ env.GOOGLE_PROJECT_ID }}/${{ env.IMAGE_NAME }}
          labels: revision=${{ github.sha }}
          build-args: REVISION=${{ github.sha }}
          push: |
            ${{ github.event_name != 'pull_request'
              && github.event_name != 'schedule' }}

      - # Temp fix - move cache instead of copying (added below step and
        # modified value of `cache-to`).
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        # Without the change some jobs were failing with `no space left on device`
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-relay-cache
          mv /tmp/.buildx-relay-cache-new /tmp/.buildx-relay-cache

  relay-build-and-publish-initcontainer:
    if: |
      github.event_name != 'pull_request'
        || needs.relay-detect-changes.outputs.path-filter == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Load environment variables
        uses: keep-network/load-env-variables@v1
        with:
          environment: ropsten

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
            
      - name: Login to Google Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.GCR_REGISTRY_URL }}
          username: _json_key
          password: ${{ secrets.KEEP_TEST_GCR_JSON_KEY }}

      - name: Build and publish initcontainer
        uses: docker/build-push-action@v2
        env:
          IMAGE_NAME: 'initcontainer-provision-relay'
        with:
          context: ./infrastructure/kube/templates/relay/initcontainer/provision-relay/
          # GCR image should be named according to following convention:
          # HOSTNAME/PROJECT-ID/IMAGE:TAG
          # We don't use TAG yet, will be added at later stages of work on RFC-18.
          tags: ${{ env.GCR_REGISTRY_URL }}/${{ env.GOOGLE_PROJECT_ID }}/${{ env.IMAGE_NAME }}
          labels: revision=${{ github.sha }}
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - # Temp fix - move cache instead of copying (added below step and
        # modified value of `cache-to`).
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        # Without the change some jobs were failing with `no space left on device`
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
